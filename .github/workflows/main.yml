on:
  workflow_dispatch:

  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          refs: refs/tags/v2.1.1
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Set env
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      - name: Install Dependancies
        run: |
          python -m pip install --upgrade pip
          pip install gdown
          pip install -U pip setuptools
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          mkdir -p Community_A-4E-C_${{ env.RELEASE_VERSION }}/Mods/aircraft/
          python get_binaries.py
          cp -R A-4E-C Community_A-4E-C_${{ env.RELEASE_VERSION }}/Mods/aircraft/A-4E-C
          cp README.md Community_A-4E-C_${{ env.RELEASE_VERSION }}/README.md
          cp CHANGELOG.md "Community_A-4E-C_${{ env.RELEASE_VERSION }}/CHANGELOG ${{ env.RELEASE_VERSION }}.md"
          cd Community_A-4E-C_${{ env.RELEASE_VERSION }}
          zip -r "../Community_A-4E-C_${{ env.RELEASE_VERSION }}.zip" .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Community A-4E-C ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "./Community_A-4E-C_${{ env.RELEASE_VERSION }}.zip"
          asset_name: "Community_A-4E-C_${{ env.RELEASE_VERSION }}.zip"
          asset_content_type: application/zip
